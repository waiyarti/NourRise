import { useState, useEffect } from "react";
import { format, isSameDay, addDays, isAfter, isBefore, startOfDay } from "date-fns";
import AnalyseIA from "../composants/AnalyseIA";
import GraphiqueEvolution from "../composants/GraphiqueEvolution";
import GraphiqueNote from "../composants/GraphiqueNote";
import { supabase } from "../supabaseClient";
import { useRouter } from "next/router";
import Head from "next/head";
import { FiAward, FiTrendingUp, FiZap, FiCheck, FiClock, FiX, FiFire, FiStar, FiHeart, FiAperture } from "react-icons/fi";
import confetti from 'canvas-confetti';

// Syst√®mes psychologiques avanc√©s
const RECOMPENSES_VARIABLES = {
  BONUS_SURPRISE: [10, 20, 50, 100],
  MULTIPLICATEURS: [1.5, 2, 3],
  COMBO_REQUIS: [3, 5, 7, 10],
  POWER_HOURS: {
    MATIN: { debut: 5, fin: 8, multiplicateur: 2, nom: "Bonus Fajr" },
    SOIREE: { debut: 21, fin: 23, multiplicateur: 1.5, nom: "Bonus R√©flexion" }
  }
};

const NIVEAUX = [
  { niveau: 1, nom: "D√©butant", requis: 0, couleur: "from-blue-400 to-blue-600", icone: "üå±", 
    motivation: "Le d√©but d'un beau voyage...", bonus: "D√©bloquez plus de t√¢ches !", medaille: "ü•â" },
  { niveau: 2, nom: "Apprenti", requis: 100, couleur: "from-green-400 to-green-600", icone: "üåø", 
    motivation: "Tu progresses bien !", bonus: "Acc√®s aux d√©fis quotidiens", medaille: "ü•à" },
  { niveau: 3, nom: "Initi√©", requis: 300, couleur: "from-yellow-400 to-yellow-600", icone: "‚≠ê", 
    motivation: "Ta pers√©v√©rance paie !", bonus: "Multiplicateur de points x1.5", medaille: "ü•á" },
  { niveau: 4, nom: "Expert", requis: 600, couleur: "from-purple-400 to-purple-600", icone: "üí´", 
    motivation: "Tu deviens une source d'inspiration !", bonus: "D√©bloquez les achievements sp√©ciaux", medaille: "üèÜ" },
  { niveau: 5, nom: "Ma√Ætre", requis: 1000, couleur: "from-red-400 to-red-600", icone: "üåü", 
    motivation: "Tu es exceptionnel !", bonus: "Mode Mentor d√©bloqu√©", medaille: "üëë" },
  { niveau: 6, nom: "L√©gende", requis: 2000, couleur: "from-pink-400 to-pink-600", icone: "üî±", 
    motivation: "Tu es une v√©ritable l√©gende !", bonus: "Personnalisation compl√®te", medaille: "‚≠ê" }
];

const CATEGORIES = {
  TOUS: { 
    nom: "Tous", 
    icone: "üìã", 
    couleur: "bg-gray-100 text-gray-800",
    theme: "bg-gray-500",
    description: "Toutes les cat√©gories",
    motivation: "Vue d'ensemble de ta progression"
  },
  SPIRITUEL: { 
    nom: "Spirituel", 
    icone: "üïå", 
    couleur: "bg-purple-100 text-purple-800",
    theme: "bg-purple-500",
    description: "√âl√©vation spirituelle",
    motivation: "Nourris ton √¢me"
  },
  SPORT: { 
    nom: "Sport", 
    icone: "üí™", 
    couleur: "bg-green-100 text-green-800",
    theme: "bg-green-500",
    description: "Sant√© physique",
    motivation: "Prends soin de ton corps"
  },
  EDUCATION: { 
    nom: "√âducation", 
    icone: "üìö", 
    couleur: "bg-blue-100 text-blue-800",
    theme: "bg-blue-500",
    description: "D√©veloppement intellectuel",
    motivation: "Cultive ton esprit"
  },
  DEVELOPPEMENT: { 
    nom: "D√©veloppement", 
    icone: "üöÄ", 
    couleur: "bg-yellow-100 text-yellow-800",
    theme: "bg-yellow-500",
    description: "Croissance personnelle",
    motivation: "Deviens meilleur chaque jour"
  }
};

const CITATIONS = [
  { texte: "Chaque petit progr√®s te rapproche de tes objectifs", auteur: "NourRise", categorie: "MOTIVATION" },
  { texte: "La constance est la cl√© du succ√®s", auteur: "NourRise", categorie: "CONSTANCE" },
  { texte: "Un pas √† la fois, mais toujours en avant", auteur: "NourRise", categorie: "PROGRESSION" },
  { texte: "La discipline est le pont entre les objectifs et leur r√©alisation", auteur: "NourRise", categorie: "DISCIPLINE" },
  { texte: "Le succ√®s se construit chaque jour", auteur: "NourRise", categorie: "QUOTIDIEN" },
  { texte: "Ta d√©termination fa√ßonne ton destin", auteur: "NourRise", categorie: "DETERMINATION" },
  { texte: "L'excellence est un art qui s'acquiert par l'entra√Ænement", auteur: "NourRise", categorie: "EXCELLENCE" },
  { texte: "Chaque difficult√© rencontr√©e est une opportunit√© de croissance", auteur: "NourRise", categorie: "RESILIENCE" }
];

const SUCCES_MESSAGES = [
  "Excellente r√©alisation ! üåü",
  "Continue sur cette lanc√©e ! üöÄ",
  "Tu es sur la bonne voie ! üéØ",
  "Impressionnant ! üí´",
  "Tu progresses admirablement ! ‚≠ê",
  "Quelle pers√©v√©rance ! üí™",
  "C'est extraordinaire ! üéâ",
  "Une r√©ussite de plus ! üåà"
];

const tachesJournalieresInitiales = [
  // Cat√©gorie SPIRITUEL
  { 
    nom: "Coran", 
    coef: 5, 
    categorie: "SPIRITUEL", 
    points: 50,
    description: "Lecture et m√©ditation du Coran",
    conseils: ["Choisis un moment calme", "Commence par une courte sourate", "R√©fl√©chis au sens"],
    bonus: { type: "MULTIPLICATEUR", valeur: 2, condition: "avant_fajr" }
  },
  { 
    nom: "Dou'a matin et soir", 
    coef: 5, 
    categorie: "SPIRITUEL", 
    points: 50,
    rappel: true,
    heures: ["05:00", "19:00"]
  },
  // ... Ajoutez toutes les autres t√¢ches avec leurs d√©tails

].map(t => ({ 
  ...t, 
  etat: "", 
  completed: false,
  derniere_realisation: null,
  streak: 0,
  meilleur_streak: 0
}));

export default function Home() {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [taches, setTaches] = useState([]);
  const [historique, setHistorique] = useState([]);
  const router = useRouter();

  // Nouveaux √©tats pour les fonctionnalit√©s
  const [niveau, setNiveau] = useState(1);
  const [points, setPoints] = useState(0);
  const [notification, setNotification] = useState(null);

  // Effets
  useEffect(() => {
    const verifierSession = async () => {
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        router.push("/connexion");
      } else {
        setUser(session.user);
        setLoading(false);
      }
    };
    verifierSession();
  }, []);

  const validerJournee = async () => {
    // Logique pour valider la journ√©e
  };

  const supprimerTache = (index) => {
    const nouvellesTaches = taches.filter((_, i) => i !== index);
    setTaches(nouvellesTaches);
  };

  const deconnexion = async () => {
    await supabase.auth.signOut();
    router.push("/connexion");
  };

  return (
    <div>
      {/* Ajout des nouvelles fonctionnalit√©s ici */}
    </div>
  );
}
